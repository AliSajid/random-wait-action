name: Run SonarCloud scan
on:
  push:
    branches:
      - main
      - next
  pull_request:
    types: [opened, synchronize, reopened]
permissions:
  contents: read

jobs:
  sonarcloud:
    permissions:
      contents: read  # for actions/checkout to fetch code
      pull-requests: read  # for SonarSource/sonarcloud-github-action to determine which PR to decorate
    name: SonarCloud
    runs-on: ubuntu-latest
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@91182cccc01eb5e619899d80e4e971d6181294a7 # v2.10.1
        with:
          egress-policy: audit

      - name: Checkout repository
        uses: actions/checkout@eef61447b9ff4aafe5dcd4e0bbf5d482be7e7871 # v4.2.1
        with:
          fetch-depth: 0

      - name: Set up pnpm
        uses: pnpm/action-setup@fe02b34f77f8bc703788d5817da081398fad5dd2 # v4.0.0
        with:
          run_install: false

      - name: Set Node.js 20.x
        uses: actions/setup-node@0a44ba7841725637a19e28fa30b79a866c81b0a6 # v4.0.4
        with:
          node-version: 20.x
          cache: pnpm

      - name: Install dependencies
        run: pnpm install

      - name: Generate Coverage Report
        run: pnpm run test:coverage

      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@9f9bba2c7aaf7a55eac26abbac906c3021d211b2 # master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
